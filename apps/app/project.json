{
  "projectType": "application",
  "root": "apps/app",
  "sourceRoot": "apps/app/src",
  "prefix": "bvr",
  "targets": {
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "outputs": [
        "{options.outputPath}"
      ],
      "options": {
        "outputPath": "dist/apps/app",
        "index": "apps/app/src/index.html",
        "main": "apps/app/src/main.ts",
        "polyfills": "apps/app/src/polyfills.ts",
        "tsConfig": "apps/app/tsconfig.app.json",
        "inlineStyleLanguage": "scss",
        "assets": [
          "apps/app/src/assets",
          "apps/app/src/firebase.json",
          {
            "glob": "**/*.svg",
            "input": "node_modules/ionicons/dist/ionicons/svg",
            "output": "./svg"
          }
        ],
        "styles": [
          "apps/app/src/styles.scss",
          {
            "input": "apps/app/src/theme/variables.scss"
          }
        ],
        "scripts": []
      },
      "configurations": {
        "production": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "500kb",
              "maximumError": "1mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "2kb",
              "maximumError": "4kb"
            }
          ],
          "fileReplacements": [
            {
              "replace": "apps/app/src/environments/environment.ts",
              "with": "apps/app/src/environments/environment.prod.ts"
            }
          ],
          "outputHashing": "all"
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        }
      },
      "defaultConfiguration": "production"
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "configurations": {
        "production": {
          "browserTarget": "app:build:production"
        },
        "development": {
          "browserTarget": "app:build:development"
        }
      },
      "defaultConfiguration": "development"
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "browserTarget": "app:build"
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "options": {
        "lintFilePatterns": [
          "apps/app/src/**/*.ts",
          "apps/app/src/**/*.html"
        ]
      }
    },
    "test": {
      "executor": "@nrwl/jest:jest",
      "outputs": [
        "coverage/apps/app"
      ],
      "options": {
        "jestConfig": "apps/app/jest.config.js",
        "passWithNoTests": true
      }
    },
    "cap": {
      "executor": "@nxtend/capacitor:cap",
      "options": {
        "cmd": "--help"
      }
    },
    "add": {
      "executor": "@nxtend/capacitor:cap",
      "options": {
        "cmd": "add"
      },
      "configurations": {
        "ios": {
          "cmd": "add ios"
        },
        "android": {
          "cmd": "add android"
        }
      }
    },
    "copy": {
      "executor": "@nxtend/capacitor:cap",
      "options": {
        "cmd": "copy"
      },
      "configurations": {
        "ios": {
          "cmd": "copy ios"
        },
        "android": {
          "cmd": "copy android"
        }
      }
    },
    "open": {
      "executor": "@nxtend/capacitor:cap",
      "options": {
        "cmd": "open"
      },
      "configurations": {
        "ios": {
          "cmd": "open ios"
        },
        "android": {
          "cmd": "open android"
        }
      }
    },
    "run": {
      "executor": "@nxtend/capacitor:cap",
      "options": {
        "cmd": "run"
      },
      "configurations": {
        "ios": {
          "cmd": "run ios"
        },
        "android": {
          "cmd": "run android"
        }
      }
    },
    "sync": {
      "executor": "@nxtend/capacitor:cap",
      "options": {
        "cmd": "sync"
      },
      "configurations": {
        "ios": {
          "cmd": "sync ios"
        },
        "android": {
          "cmd": "sync android"
        }
      }
    },
    "update": {
      "executor": "@nxtend/capacitor:cap",
      "options": {
        "cmd": "update"
      },
      "configurations": {
        "ios": {
          "cmd": "update ios"
        },
        "android": {
          "cmd": "update android"
        }
      }
    },
    "xcodebuild:release": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "cwd": "./apps/app/ios/App",
        "parallel": false,
        "commands": [
          {
            "description": "Set MARKETING_VERSION to {args.version}",
            "command": "sed -i '' -e 's/MARKETING_VERSION \\= [^\\;]*\\;/MARKETING_VERSION = {args.version};/' App.xcodeproj/project.pbxproj",
            "forwardAllArgs": false
          },
          {
            "description": "Set CURRENT_PROJECT_VERSION to $GITHUB_RUN_NUMBER-$GITHUB_RUN_ATTEMPT",
            "command": "sed -i '' -e 's/CURRENT_PROJECT_VERSION \\= [^\\;]*\\;/CURRENT_PROJECT_VERSION = \"$GITHUB_RUN_NUMBER-$GITHUB_RUN_ATTEMPT\";/' App.xcodeproj/project.pbxproj",
            "forwardAllArgs": false
          },
          {
            "description": "Basic lesson on iOS development: always clean your project! @see https://medium.com/passei-direto-product-and-technology/from-xcode-to-testflight-using-command-line-288c3a85bd93",
            "command": "xcodebuild -workspace App.xcworkspace -scheme App -sdk iphoneos -configuration Release clean",
            "forwardAllArgs": false
          },
          {
            "description": "Install dependencies",
            "command": "pod install",
            "forwardAllArgs": false
          },
          {
            "description": "Archive the project",
            "command": "xcodebuild -workspace App.xcworkspace -scheme App -configuration Release archive -archivePath \"./build/App.xcarchive\"",
            "forwardAllArgs": false
          },
          {
            "description": "Export the .ipa file",
            "command": "xcodebuild -exportArchive -archivePath \"./build/App.xcarchive\" -exportOptionsPlist exportOptions.plist -exportPath \"./build\" -allowProvisioningUpdates",
            "forwardAllArgs": false
          },
          {
            "description": "Publish the app",
            "command": "xcrun altool --upload-app -t ios -f \"./build/App.ipa\" -u $APPLE_PUBLISH_USER -p $APPLE_PUBLISH_TOKEN",
            "forwardAllArgs": false
          }
        ]
      }
    },
    "release": {
      "builder": "@nrwl/workspace:run-commands",
      "options": {
        "cwd": "./",
        "parallel": false,
        "commands": [
          "cd apps/app && npm version {args.version}",
          {
            "command": "nx build app --prod",
            "forwardAllArgs": false
          },
          {
            "command": "cd dist/apps/app && firebase deploy --project bvr-app-4fff0",
            "forwardAllArgs": false
          },
          {
            "command": "nx run app:sync:ios && nx run app:sync:android && nx xcodebuild:release app --version={args.version}",
            "forwardAllArgs": false
          }
        ]
      }
    }
  },
  "tags": []
}
